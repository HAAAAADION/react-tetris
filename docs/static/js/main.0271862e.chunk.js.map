{"version":3,"sources":["App.js","config/constant.js","utils/utils.js","utils/store.js","utils/shape.js","utils/bus.js","component/cube/index.js","component/game/index.js","component/next/index.js","component/info/index.js","component/game-area/index.js","component/control/index.js","utils/disable-zoom.js","serviceWorker.js","store/index.js","store/home.js","index.js"],"names":["keyupListener","timeY","STATE","COL_SIZE","KEY_CODE_DIRECTION","SPACE","LEFT","RIGHT","DOWN","KEY_CODE_DIRECTION_SEED","EVENT_KEY","getShapeSize","shape","length","getShapeHalfSize","Math","floor","slice","arr","size","result","i","push","isEmpty","v","Object","prototype","toString","call","keys","undefined","isMobile","test","navigator","userAgent","sleep","duration","Promise","resolev","setTimeout","dispatch","payload","window","_dva","_store","updateState","type","setX","x","setY","y","updateScore","getState","this","state","home","reverse","nextShape","_getSafeRang","row","p","reduce","item","min","max","getShape","key","shapeList","parseInt","random","checkCollision","nx","ny","newShape","store","body","computedShape","newBody","map","e","loop","k","yIndex","cX","checkStop","flash","indexs","a","count","cCount","resolve","forEach","splice","Array","fill","eliminate","unshift","Bus","funs","on","fn","emit","props","off","bus","className","cx","connect","useState","nextArea","setNextArea","useEffect","nextAreaContent","ROW_SIZE","score","Btn","text","onTouchStart","pushProps","onMouseDown","change","down","getYStop","cy","handleDirection","keyCode","longestSide","sizeArr","getShapeLongestRowSide","computedX","newX","left","right","isStart","onKeyUp","values","includes","start","currentShape","nextState","beforeStart","document","addEventListener","handleEnd","clearTimer","resetAnimation","num","seed","total","cNum","cSeed","nextNum","cState","console","log","handleCount","isStop","newMatrix","index","every","isEliminate","some","updateShape","event","preventDefault","lastTouchEnd","documentElement","now","Date","disableZoom","changeSizeX","changeSizeY","colLength","lastPointX","findIndex","rowX","rowY","sizeX","sizeY","assign","getShapeSafeRange","safeRangeX","safeRangeY","newShapeSize","boundaryFix","clearTimeout","Boolean","location","hostname","match","stores","namespace","reducers","effects","put","createStore","app","model","dva","router","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0271862e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'dva';\nimport { STATE, COL_SIZE, KEY_CODE_DIRECTION, EVENT_KEY } from 'config/constant';\nimport { getShape, checkStop, getShapeSafeRange, resetAnimation, eliminate } from 'utils/shape';\nimport store from 'utils/store';\nimport { slice, boundaryFix, getShapeSize, getShapeHalfSize, isEmpty } from 'utils/utils';\nimport { bus } from 'utils/bus';\nimport disableZoom from 'utils/disable-zoom';\nimport GameArea from 'component/game-area';\nimport Control from 'component/control';\nimport './App.scss';\n\n// keyup 监听器\nlet keyupListener;\n// 是否已经开始\nlet isStart = false;\n// 计时器\nlet timeY;\n// 下落间隔实践\nlet TIME_DURATION = 500;\n\nconst App = (props) => {\n  const { body, x, y, shape, nextShape } = props;\n\n  const onKeyUp = (e) => {\n    if (!isStart) return;\n\n    const { keyCode } = e;\n\n    if (!Object.values(KEY_CODE_DIRECTION).includes(keyCode)) return;\n\n    bus.emit(keyCode, { keyCode });\n  };\n\n  const start = () => {\n    if (!isStart) return;\n\n    const currentShape = isEmpty(nextShape) ? getShape() : nextShape;\n\n    const nextState = { \n      y: 0,\n      shape: currentShape,\n      nextShape: getShape(),\n      x: Math.floor((COL_SIZE - 1) / 2) - getShapeHalfSize(currentShape),\n    };\n\n    store.updateState(nextState);\n  };\n\n  const beforeStart = () => {\n    if (isStart) return;\n\n    if (!keyupListener) {\n      keyupListener = onKeyUp;\n      document.addEventListener('keyup', onKeyUp);\n    }\n\n    isStart = true;\n\n    start();\n  };\n\n  /**\n   * 游戏结束\n   */\n  const handleEnd = () => {\n    clearTimer();\n\n    resetAnimation();\n\n    isStart = false;\n    console.log('游戏结束');\n  };\n\n  /**\n   * 结算\n   * @param {Boolean} isStop   是否停止\n   */\n  const handleCount = async (isStop) => {\n    const { body } = store.state.home;\n    const newMatrix = slice(body, COL_SIZE);\n\n    // 到底停止\n    if (isStop) clearTimer();\n\n    // 检测是否执行消除\n    const indexs = newMatrix.reduce((result, item, index) => {\n      const isFull = item.every(e => e === STATE.COMPLETE);\n      if (isFull) result.push(index);\n      return result;\n    }, []);\n\n    // 是否需要清除\n    const isEliminate = indexs.length > 0;\n\n    // 清除逻辑\n    if (isEliminate) {\n      // 清除计时器\n      clearTimer();\n\n      console.log('正在执行消除, 下标集合: ', indexs);\n\n      await eliminate(indexs);\n      // 更新分数\n      store.updateScore(indexs.length);\n    }\n\n    // 是否结束\n    const isEnd = body.slice(0, 10).some(e => e === STATE.COMPLETE);\n\n    if (isEnd) handleEnd();         // 游戏结束\n    else if (isEliminate) start();  // 消除\n    else if (isStop) start();       // 继续\n  };\n\n  /**\n   * 更新位置\n   */\n  const updateShape = () => {\n    const newBody = body.map(e => e ===  STATE.PROGRESS ? STATE.EMPTY : e);\n\n    // 是否停止\n    const isStop = checkStop(x, y);\n    // 当前 y\n    const ny = isStop ? y - 1 : y;\n\n    shape.forEach((e, i) => {\n      e.forEach((v, k) => {\n        if (v === 1) {\n          const yIndex = (ny - i) * COL_SIZE;\n          newBody[yIndex + x + k] = isStop ? STATE.COMPLETE : STATE.PROGRESS;\n        }\n      })\n    });\n\n    store.updateState({ body: newBody });\n    handleCount(isStop);\n  };\n\n  useEffect(() => {\n    if (!isStart) return;\n\n    clearTimer();\n\n    timeY = setTimeout(() => {\n      store.setY(y + 1);\n    }, TIME_DURATION);\n  }, [y]);\n\n  useEffect(() => {\n    if (!isStart) return;\n    updateShape();\n  }, [x, y, shape]);\n\n  useEffect(() => {\n    bus.on(EVENT_KEY.START_GAME, beforeStart);\n    bus.on(EVENT_KEY.RESET_GAME, handleEnd);\n    bus.on(EVENT_KEY.SHAPE_CHANGE, change);\n\n    disableZoom();\n  }, []);\n\n  const change = () => {\n    if (!isStart) return;\n\n    const { x, y } = store?.state?.home || {};\n\n    // 测试形状\n    // const example = [\n    //   [0, 1, 1],\n    //   [1, 1, 1],\n    // ];\n\n    const { currentShape } = store;\n\n    // 一维长度 = 变形后的 x 长度\n    const changeSizeX = currentShape.length;\n    // 二维长度 = 变形后的 y 长度\n    const changeSizeY = currentShape[0].length - 1;\n\n    // 安全位置\n    const { x: safeRangeX, y: safeRangeY } = getShapeSafeRange();\n\n    if (\n      // x 超过安全位置\n      (safeRangeX.max - safeRangeX.min < changeSizeX - 1) ||\n      // y 超过安全位置\n      (y >= changeSizeY && y - safeRangeY.min < changeSizeY)\n    ) {\n      return;\n    }\n\n    // 变形后形状\n    const newShape = currentShape.reduce((result, item, i) => {\n      item.forEach((v, k) => {\n        if (!result[k]) result[k] = Array(currentShape.length);\n\n        result[k][currentShape.length - 1 - i] = v;\n      });\n\n      return result;\n    }, []);\n\n    // 新形状长度\n    const newShapeSize = getShapeSize(newShape);\n    // 计算后的 x\n    const computedX = x + getShapeHalfSize(currentShape) - Math.floor(newShapeSize / 2);\n\n    const min = safeRangeX.min;\n    const max = safeRangeX.max - newShapeSize + 1;\n\n    // x 兼容边界溢出\n    const newX = boundaryFix(computedX, min, max);\n\n    store.updateState({\n      shape: [...newShape].reverse(),\n      x: newX,\n    });\n  };\n\n  /**\n   * 清除计时器\n   */\n  const clearTimer = () => {\n    if (timeY) {\n      clearTimeout(timeY);\n      timeY = null;\n    }\n  };\n\n  return (\n    <div className=\"index\">\n      <div className=\"index__container\">\n        <GameArea />\n        <Control />\n      </div>\n    </div>\n  );\n}\n\nexport default connect(({\n  home,\n}) => (home))(App);\n","// 状态\nexport const STATE = {\n  EMPTY: '0',\n  PROGRESS: '1',\n  COMPLETE: '2',\n};\n\n// 列数\nexport const COL_SIZE = 10;\n\n// 每次消除分数\nexport const SCORE_SIZE = 10;\n\n// 键盘方向\nexport const KEY_CODE_DIRECTION = {\n  SPACE: 32,\n  LEFT: 37,\n  RIGHT: 39,\n  DOWN: 40,\n};\n\n// 方向种子数\nexport const KEY_CODE_DIRECTION_SEED = {\n  [KEY_CODE_DIRECTION.LEFT]: -1,\n  [KEY_CODE_DIRECTION.RIGHT]: 1\n}\n\n// 全局广播 key\nexport const EVENT_KEY = {\n  START_GAME: 'START_GAME',\n  RESET_GAME: 'RESET_GAME',\n  SHAPE_CHANGE: 'SHAPE_CHANGE',\n  SHAPE_LEFT: 'SHAPE_LEFT',\n  SHAPE_RIGHT: 'SHAPE_RIGHT',\n  SHAPE_DOWN: 'SHAPE_DOWN',\n};","/**\n * 获取范围随机数\n * @param   {Number}  min 最小值\n * @param   {Number}  max 最大值\n * @return  {Number}      随机数\n */\nexport const getRandom = (min, max) => parseInt(Math.random() * (max - min + 1) + min, 10);\n\n/**\n * 边界判断\n * @param   {Number}  min 最小值\n * @param   {Number}  max 最大值\n */\nexport const boundaryFix = (num, min, max) => num < min ? min : num > max ? max : num;\n\n/**\n * 获取形状边长\n * @param   {Array}   shape 形状数据\n * @returns {Number}        边长\n */\nexport const getShapeSize = (shape) => shape?.[0]?.length || 0;\n\n/**\n * 获取形状边长的一半\n * @param   {Array}   shape 形状数据\n * @returns {Number}        边长一半\n */\nexport const getShapeHalfSize = (shape) => Math.floor(getShapeSize(shape) / 2);\n\n/**\n * 分割数组\n * @param   {Array} arr   目标数组\n * @param   {Array} size  分割数组长度\n * @return  {Array}       分割后数组 \n */\nexport const slice = (arr, size) => {\n  const result = [];\n  for (let i = 0; i < arr.length / size; i++) {\n    result.push(arr.slice(size * i, size * i + size));\n  }\n\n  return result;\n};\n\n/**\n * 获取形状横向最长的边\n * @param   {Array}   shape 形状矩阵\n * @return  {Number}        最长边占位  \n */\nexport const getShapeLongestRowSide = (shape) => {\n  const sizeArr = shape.map(e => e.length);\n  return Math.max(...sizeArr);\n};\n\n/**\n * 内容是否为空\n * @param   {*} v     判断数据内容\n * @return  {Boolean} 是否为空\n */\nexport const isEmpty = (v) => {\n  const objType = Object.prototype.toString.call(v);\n \n  switch (objType) {\n    case '[object Array]':\n      return v.length <= 0;\n    case '[object Object]':\n      return Object.keys(v).length <= 0;\n    default:\n      return v === undefined;\n  }\n};\n\n/**\n * 是否手机\n */\nexport const isMobile = () => /Android|webOS|iPhone|iPad|BlackBerry/i.test(navigator.userAgent);\n\n/**\n * 延迟执行\n * @param   {Number}  duration  延迟时间(毫秒)\n * @return  {Promise}\n */\nexport const sleep = (duration) => {\n  return new Promise((resolev) => {\n    setTimeout(() => {\n      resolev();\n    }, duration);\n  });\n};","const dispatch = (payload) => {\n  window._dva._store.dispatch(payload);\n};\n\nconst updateState = (payload) => {\n  dispatch({\n    type: 'home/updateState',\n    payload,\n  });\n};\n\nconst setX = (x) => {\n  dispatch({\n    type: 'home/setX',\n    payload: { x },\n  });\n};\n\nconst setY = (y) => {\n  dispatch({\n    type: 'home/setY',\n    payload: { y },\n  });\n};\n\nconst updateScore = (size = 0) => {\n  dispatch({\n    type: 'home/updateScore',\n    payload: { size },\n  });\n};\n\nexport default {\n  updateState,\n  setX,\n  setY,\n  updateScore,\n  get state () { \n    return window?._dva?._store?.getState();\n   },\n\n   get currentShape () {\n     return [...this.state.home.shape].reverse();\n   },\n\n   get nextShape () {\n    return [...this.state.home.nextShape].reverse();\n  },\n};","import { COL_SIZE, STATE } from 'config/constant';\nimport shapeList from 'config/shape.json';\nimport { getRandom, slice, sleep } from './utils';\nimport store from './store';\n\n/**\n * 获取当前水平/垂直安全位置\n * @param   {Array}     row 判断数据\n * @param   {Number}    p   当前坐标, [x, y]\n * @return  {Object}        安全位置数据, {min, max}\n */\nconst _getSafeRang = (row, p) => {\n    return row.reduce((result, item, i) => {\n        if (item === STATE.COMPLETE) {\n            if (i <= p) result.min = i + 1;\n            else if (i > p && result.max === undefined) result.max = i - 1;\n        }\n\n        return result;\n    }, {});\n};\n\n// 因为渲染的原因, 所有每个图形返回时都要反转一下\nexport const getShape = () => {\n    const key = getRandom(0, shapeList.length - 1);\n    // const key = 0;\n\n    const shape = shapeList[key];\n    return [...shape].reverse();\n}\n\n/**\n * 判断下一个位置是否碰撞\n * @param   {Number}  nx            检查 x\n * @param   {Number}  ny            检查 y\n * @param   {Array=}  newShape      当前形状\n * @return  {Boolean | Object}      是否碰撞 | 碰撞坐标\n */\nexport const checkCollision = (nx, ny, newShape) =>  {\n    const { shape = [], body = [] } = store?.state?.home || {};\n    const computedShape = newShape || shape;\n    let result = false;\n\n    const newBody = body.map(e => e ===  STATE.PROGRESS ? STATE.EMPTY : e);\n\n    loop:\n    for(let i = 0; i < computedShape.length; i += 1)  {\n        for(let k = 0; k < computedShape[i].length; k += 1) {\n        const yIndex = (ny - i) * COL_SIZE;\n\n        // 当前 x\n        const cX = nx + k;\n        if (computedShape[i][k] === 1 && newBody[yIndex + cX] === STATE.COMPLETE) {\n            result = { x: cX, y: yIndex };\n            break loop;\n        }\n        }\n    }\n\n    return result;\n};\n\n/**\n * 判断是否停止\n * @param   {Number}  nx  当前 x\n * @param   {Number}  ny  当前 y\n * @return  {Boolean}     是否停止(是否到底 || 下一个位置是否碰撞)\n */\nexport const checkStop = (nx, ny) => {\n    const { body = [] } = store?.state?.home || {};\n    const matrix = slice(body, COL_SIZE);\n\n    return ny >= matrix.length || checkCollision(nx, ny);\n}\n\n/**\n * 获取相对与当前 x y 最后要停止的 y 的位置\n * @param   {Number=}  ny   当前 y\n * @return  {Number}        y 应该停止的位置\n */\nexport const getYStop = (ny) => {\n    const { x = 0, y = 0 } = store?.state?.home || {};\n    const  cy = ny || y;\n\n    return checkStop(x, cy) ? cy - 1 : getYStop(cy + 1);\n}\n\n/**\n * 获取当前可用安全位置(x, y)\n * @return  {OPbject}   x, y 安全距离\n */\nexport const getShapeSafeRange = () => {\n    const { x, y, body } = store?.state?.home || {};\n\n    // 画布垂直长度\n    const colLength = slice(body, COL_SIZE).length;\n    // 当前形状最后一行的起始的 x 位置\n    const lastPointX = store.currentShape[store.currentShape.length - 1].findIndex(e => e === 1);\n\n    // 当前行数据\n    const rowX = body.slice(y * COL_SIZE, y * COL_SIZE + COL_SIZE);\n    // 当前列数据\n    const rowY = Array(colLength).fill('0').map((e, i) => body[(i * COL_SIZE) + x + lastPointX]);\n\n    // 水平安全位置\n    const sizeX = _getSafeRang(rowX, x);\n    // 垂直安全位置\n    const sizeY = _getSafeRang(rowY, y);\n\n    return {\n        x: Object.assign({ min: 0, max: COL_SIZE - 1 }, sizeX),\n        y: Object.assign({ min: 0, max: colLength - 1 }, sizeY),\n    };\n};\n\n/**\n * 清除画布动画\n * @param   {Number=}   num     当前 y\n * @param   {Number=}   seed    递归种子数, [-1, 1]\n */\nexport const resetAnimation = (num, seed = -1) => {\n    const { body } = store.state.home;\n\n    const total = slice(body, COL_SIZE).length - 1;\n    const cNum = num !== undefined ? num : total;\n    const cSeed = cNum <= 0 ? 1 : seed;\n    const nextNum = cNum + seed < 0 ? 0 : cNum + cSeed;\n    const cState = seed > 0 ? STATE.EMPTY : STATE.COMPLETE;\n    \n    if (cNum > total) return;\n\n    const yIndex = cNum * COL_SIZE;\n    body.splice(yIndex, COL_SIZE, ...Array(COL_SIZE).fill(cState));\n\n    store.updateState({ body: [...body] });\n\n    setTimeout(() => {\n        resetAnimation(nextNum, cSeed);\n    }, 50);\n};\n\n/**\n * 闪动\n * @param   {Array}     indexs  需要闪动的 y 下标集合   \n * @param   {Number=}   count   剩余闪动次数, 2 次为一组\n */\nexport const flash = async (indexs, count = 9) => {\n    const { body } = store.state.home;\n\n    const cCount = count - 1;\n    if (cCount <= 1) return Promise.resolve();\n\n    const state = cCount % 2 === 0 ? STATE.COMPLETE : STATE.EMPTY;\n\n    indexs.forEach(e => {\n        body.splice(e * COL_SIZE, COL_SIZE, ...Array(COL_SIZE).fill(state));\n    });\n\n    store.updateState({ body: [...body] });\n\n    await sleep(200);\n    return flash(indexs, cCount);\n};\n\n/**\n * 清除\n * @param {Array} indexs    需要清除的 y 集合\n */\nexport const eliminate = async (indexs) => {\n    await flash(indexs);\n\n    const { body } = store.state.home;\n\n    indexs.forEach((e, i) => {\n        body.splice((e - i) * COL_SIZE, COL_SIZE);\n    });\n\n    body.unshift(...Array(COL_SIZE * indexs.length).fill(STATE.EMPTY));\n\n    store.updateState({ body: [...body] });\n};","class Bus {\n  funs = {};\n\n  on = (key, fn) => {\n    this.funs[key] = fn;\n  };\n\n  emit = (key, props) => {\n    if (!this.funs[key]) return;\n\n    this.funs[key](props);\n  };\n\n  off = (key) => {\n    delete this.funs[key];\n  };\n}\n\nexport const bus = new Bus();\nexport default Bus;\n","import React from 'react';\nimport cx from 'classname';\nimport { STATE } from 'config/constant';\nimport './index.scss';\n\nexport default (props) => {\n  const { type } = props;\n\n  return (\n    <div\n      className={cx('cube', {\n        'cube--active': type === STATE.PROGRESS,\n        'cube--complete': type === STATE.COMPLETE\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport { connect } from 'dva';\nimport Cube from 'component/cube';\nimport './index.scss';\n\nconst Game = (props) => {\n  const { body } = props;\n\n  return (\n    <div className=\"game\">\n      {body.map((v, k) => <Cube key={k} type={v} />)}\n    </div>\n  );\n}\n\nexport default connect(({\n  home,\n}) => ({\n  body: home.body,\n}))(Game);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'dva';\nimport { STATE } from 'config/constant';\nimport store from 'utils/store';\nimport Cube from 'component/cube';\nimport './index.scss';\n\nconst ROW_SIZE = 4;\nconst COL_SIZE = 3;\n\nconst Next = (props) => {\n  const { nextShape } = props;\n\n  const [nextArea, setNextArea] = useState([]);\n\n  useEffect(() => {\n    const { nextShape } = store;\n\n    const nextAreaContent = Array(ROW_SIZE * COL_SIZE).fill(STATE.EMPTY);\n\n    nextShape.forEach((e, i) => {\n      e.forEach((v, k) => {\n        const yIndex = i * (ROW_SIZE - 1);\n        nextAreaContent[yIndex + k] = v ? STATE.COMPLETE : STATE.EMPTY;\n      })\n    });\n\n    setNextArea(nextAreaContent);\n  }, [nextShape]);\n\n  return (\n    <div className=\"next\">\n      {nextArea.map((v, k) => <Cube key={k} type={v} />)}\n    </div>\n  );\n}\n\nexport default connect(({\n  home,\n}) => ({\n  nextShape: home.nextShape,\n}))(Next);\n","import React from 'react';\nimport { connect } from 'dva';\nimport Next from 'component/next';\nimport './index.scss';\n\nconst Info = (props) => {\n  const { score } = props;\n\n  return (\n    <div className=\"info\">\n      <p className=\"info__title\">得分</p>\n      <p>{score}</p>\n      <p className=\"info__title\">下一个</p>\n      <Next />\n    </div>\n  );\n}\n\nexport default connect(({\n  home,\n}) => ({\n  score: home.score,\n}))(Info);\n","import React from 'react';\nimport Game from 'component/game';\nimport Info from 'component/info';\nimport './index.scss';\n\nexport default () => {\n  return (\n    <div className=\"game-area\">\n      <div className=\"game-area__wrap\">\n        <div className=\"game-area__container\">\n          <Game />\n          <Info />\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport cx from 'classname';\nimport { COL_SIZE, EVENT_KEY, KEY_CODE_DIRECTION, KEY_CODE_DIRECTION_SEED } from 'config/constant';\nimport { bus } from 'utils/bus';\nimport store from 'utils/store';\nimport { getYStop, checkCollision } from 'utils/shape';\nimport { getShapeLongestRowSide, isEmpty, isMobile } from 'utils/utils';\nimport './index.scss';\n\nconst Btn = (props = {}) => {\n  const { \n    className,\n    text,\n    onTouchStart = () => {},\n  } = props;\n\n  const pushProps = {\n    className: cx('c-btn', className),\n  };\n\n  if (isMobile()) {\n    pushProps.onTouchStart = onTouchStart;\n  } else {\n    pushProps.onMouseDown = onTouchStart;\n  }\n\n  return (\n    <div {...pushProps}>\n      <i className=\"c-btn__icon\" />\n      {text && <p>{text}</p>}\n    </div>\n  );\n};\n\nexport default (props) => {\n  const change = () => {\n    bus.emit(EVENT_KEY.SHAPE_CHANGE);\n  };\n\n  const down = () => {\n    const { shape } = store?.state?.home;\n\n    if (isEmpty(shape)) return;\n\n    store.setY(getYStop() + 1);\n  };\n\n  const handleDirection = (keyCode) => {\n    const { x, y, shape } = store?.state?.home || {};\n\n    const longestSide = getShapeLongestRowSide(shape);\n    const computedX = x + KEY_CODE_DIRECTION_SEED[keyCode];\n\n    // 超小 || 超大 || 发生碰撞 \n    const newX = computedX < 0 || computedX + longestSide > COL_SIZE || checkCollision(computedX, y) ? x : computedX;\n\n    store.setX(newX);\n  };\n\n  const left = () => {\n    handleDirection(KEY_CODE_DIRECTION.LEFT);\n  };\n\n  const right = () => {\n    handleDirection(KEY_CODE_DIRECTION.RIGHT);\n  };\n\n  const start = () => {\n    bus.emit(EVENT_KEY.START_GAME);\n  };\n\n  const reset = () => {\n    bus.emit(EVENT_KEY.RESET_GAME);\n  };\n\n  useEffect(() => {\n    bus.on(KEY_CODE_DIRECTION.SPACE, change);\n    bus.on(KEY_CODE_DIRECTION.DOWN, down);\n    bus.on(KEY_CODE_DIRECTION.LEFT, left);\n    bus.on(KEY_CODE_DIRECTION.RIGHT, right);\n  }, []);\n\n  return (\n    <div className=\"control\">\n      <div>\n        <div className=\"control__core\">\n          <Btn className=\"control__btn--start\" text=\"开始\" onTouchStart={start} />\n          <Btn className=\"control__btn--reset\" text=\"重玩\" onTouchStart={reset} />\n        </div>\n        <Btn className=\"control__btn--change\" text=\"变形(SPACE)\" onTouchStart={change} />\n      </div>\n      <div className=\"control__direction\">\n        <Btn className=\"control__btn--left\" text=\"左移\" onTouchStart={left} />\n        <Btn className=\"control__btn--right\" text=\"右移\" onTouchStart={right} />\n        <Btn className=\"control__btn--down\" text=\"掉落\" onTouchStart={down} />\n      </div>\n    </div>\n  );\n}\n","export default () => {\n  document.addEventListener('gesturestart', (event) => {\n    event.preventDefault();\n  });\n  \n  var lastTouchEnd = 0;\n  document.documentElement.addEventListener('touchend', (event) => {\n    var now = Date.now();\n    if (now - lastTouchEnd <= 300) {\n      event.preventDefault();\n    }\n    lastTouchEnd = now;\n  }, false);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import home from './home';\n\nconst stores = {\n  home,\n};\n\nconst createStore  = (app) => {\n  Object.keys(stores).forEach(e => {\n    app.model(stores[e]);\n  });\n};\n\nexport default createStore;","import { SCORE_SIZE } from 'config/constant';\nimport store from 'utils/store';\n\nexport default {\n  namespace: 'home',\n  state: {\n    x: 0,\n    y: -1,\n    // 得分\n    score: 0,\n    // 当前形状\n    shape: [],\n    // 下一个形状\n    nextShape: [],\n    body: Array(150).fill('0'),\n  },\n  reducers: {\n    updateState(state, { payload = {} }) {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n  },\n  effects: {\n    *setX({ payload: { x } }, { put }) {\n      yield put({\n        type: 'updateState',\n        payload: { x },\n      });\n    },\n\n    *setY({ payload: { y } }, { put }) {\n      yield put({\n        type: 'updateState',\n        payload: { y },\n      });\n    },\n\n    *updateScore({ payload: { size = 0 } }, { put }) {\n      const score = store.state.home.score + size * SCORE_SIZE;\n\n      yield put({\n        type: 'updateState',\n        payload: { score },\n      });\n    },\n  },\n}\n","import React from 'react';\nimport dva from 'dva';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport './index.css';\n\nconst app = dva();\n\nwindow._dva = app;\n\nstore(app);\n\napp.router(() => <App />);\napp.start('#root');\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}